class Solution {
    // Function to reverse a circular linked list
    Node reverse(Node head) {
        // code here
       
        Node temp = head;
        Node prev = null;
        Node tail = head;
        boolean iterate=true;
        while (temp != head||iterate) {
            iterate=false;
            Node t = temp.next;
            temp.next = prev;
            prev = temp;
            temp = t;
        }
        tail.next = prev;
        return prev;
        
    }

    // Function to delete a node from the circular linked list
    Node deleteNode(Node head, int key) {
        // code here
        if (head.data == key) {
            Node temp = head.next;
            while (temp.next != head) {
                temp = temp.next;
            }
            temp.next = head.next;
            return head.next;
        }
        Node temp = head.next;
        Node prev = head;
        while (temp != head) {
            if (temp.data == key) {
                prev.next = temp.next;
                if (temp == head.next) {
                    head.next = temp.next;
                }
                return head;
            }
            prev = temp;
            temp = temp.next;
        }
        return head;
    }
}
