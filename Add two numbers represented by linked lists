class Solution {
    // Function to add two numbers represented by linked list.
    
    static Node reverse(Node head){
        Node curr=head;
        Node prev=null;
        Node n=null;
        while(curr!=null){
            n=curr.next;
            curr.next=prev;
            prev=curr;
            curr=n;
        }
        return prev;
    }
    
    
    static Node addTwoLists(Node num1, Node num2) {
        // code here
        Node n1=reverse(num1);
        Node n2=reverse(num2);
        
        
        Node dummy=new Node(-1);
        Node temp=dummy;
        int carry=0;
        while(n1!=null || n2!=null){
            int sum=carry;
            if(n1!=null){
                sum+=n1.data;
                n1=n1.next;
            }
            if(n2!=null){
                sum+=n2.data;
                n2=n2.next;
            }
          Node node = new Node(sum%10);
          dummy.next=node;
          dummy=node;
          carry=sum/10;
        }
        if(carry!=0){
            Node node = new Node(carry);
            dummy.next=node;
            dummy=node;
        }
        Node a=reverse(temp.next);
        while(a != null && a.data == 0){
            a=a.next;
        }
        if(a==null)
        return new Node(0);
        return a;
    }
}
