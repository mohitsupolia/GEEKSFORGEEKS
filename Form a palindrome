class Solution{
    static int dp[][];
    static int countMin(String str)
    {
        int n = str.length();
        dp = new int[n+1][n+1];
        for(int row[]:dp){
            Arrays.fill(row,-1);
        }
        if(n==1){
            return 0;
        }
        int i=0;
        int j=n-1;
        return n - lps(str,i,j);
    }
    static int lps(String str, int i, int j){
        if(i>j){
            return 0;
        }
        if(i == j)
        return 1;
        
        if(dp[i][j] != -1){
            return dp[i][j];
        }
        if(str.charAt(i) == str.charAt(j)){
            return dp[i][j] = 2+lps(str, i+1, j-1);
        }
        else{
            return dp[i][j] = Math.max(lps(str, i+1, j), lps(str, i, j-1));
        }
    }
}
