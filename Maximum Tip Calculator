class Solution {
    static class Order {
        int diff;
        int aTip;
        int bTip;
        
        Order(int diff, int aTip, int bTip) {
            this.diff = diff;
            this.aTip = aTip;
            this.bTip = bTip;
        }
    }
    
    public static long maxTip(int n, int x, int y, int[] arr, int[] brr) {
        // code here
         List<Order> orders = new ArrayList<>();
        
        for (int i = 0; i < n; i++) {
            orders.add(new Order(Math.abs(arr[i] - brr[i]), arr[i], brr[i]));
        }

        orders.sort((o1, o2) -> o2.diff - o1.diff);

        long totalTips = 0;
        int aCount = 0;
        int bCount = 0;

        for (Order order : orders) {
            if ((order.aTip >= order.bTip && aCount < x) || bCount == y) {
                totalTips += order.aTip;
                aCount++;
            } else {
                totalTips += order.bTip;
                bCount++;
            }
        }

        return totalTips;

    }
}
